"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Model(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    LAYERS_FIELD_NUMBER: builtins.int
    name: typing.Text
    @property
    def layers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Layer]: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        layers: typing.Optional[typing.Iterable[global___Layer]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["layers",b"layers","name",b"name"]) -> None: ...
global___Model = Model

class Layer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _LayerType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LayerTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Layer._LayerType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        DENSE: Layer._LayerType.ValueType  # 0
        CONV2D: Layer._LayerType.ValueType  # 1
    class LayerType(_LayerType, metaclass=_LayerTypeEnumTypeWrapper):
        pass

    DENSE: Layer.LayerType.ValueType  # 0
    CONV2D: Layer.LayerType.ValueType  # 1

    LAYER_TYPE_FIELD_NUMBER: builtins.int
    USE_BIAS_FIELD_NUMBER: builtins.int
    WEIGHTS_FIELD_NUMBER: builtins.int
    BIASES_FIELD_NUMBER: builtins.int
    INPUT_QUANTIZER_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    layer_type: global___Layer.LayerType.ValueType
    use_bias: builtins.bool
    @property
    def weights(self) -> global___QTensor: ...
    @property
    def biases(self) -> global___QTensor: ...
    @property
    def input_quantizer(self) -> global___Quantizer: ...
    width: builtins.int
    height: builtins.int
    channels: builtins.int
    def __init__(self,
        *,
        layer_type: global___Layer.LayerType.ValueType = ...,
        use_bias: builtins.bool = ...,
        weights: typing.Optional[global___QTensor] = ...,
        biases: typing.Optional[global___QTensor] = ...,
        input_quantizer: typing.Optional[global___Quantizer] = ...,
        width: builtins.int = ...,
        height: builtins.int = ...,
        channels: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["biases",b"biases","input_quantizer",b"input_quantizer","weights",b"weights"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["biases",b"biases","channels",b"channels","height",b"height","input_quantizer",b"input_quantizer","layer_type",b"layer_type","use_bias",b"use_bias","weights",b"weights","width",b"width"]) -> None: ...
global___Layer = Layer

class QTensor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    QUANTIZER_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def quantizer(self) -> global___Quantizer: ...
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(self,
        *,
        quantizer: typing.Optional[global___Quantizer] = ...,
        values: typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["quantizer",b"quantizer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["quantizer",b"quantizer","values",b"values"]) -> None: ...
global___QTensor = QTensor

class Quantizer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _QuantizerType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _QuantizerTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Quantizer._QuantizerType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SYMMETRIC_UNIFORM_PO2: Quantizer._QuantizerType.ValueType  # 0
        BINARY_SIGN: Quantizer._QuantizerType.ValueType  # 1
        BINARY_PO2: Quantizer._QuantizerType.ValueType  # 2
    class QuantizerType(_QuantizerType, metaclass=_QuantizerTypeEnumTypeWrapper):
        pass

    SYMMETRIC_UNIFORM_PO2: Quantizer.QuantizerType.ValueType  # 0
    BINARY_SIGN: Quantizer.QuantizerType.ValueType  # 1
    BINARY_PO2: Quantizer.QuantizerType.ValueType  # 2

    TYPE_FIELD_NUMBER: builtins.int
    BIT_WIDTH_FIELD_NUMBER: builtins.int
    SCALE_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    type: global___Quantizer.QuantizerType.ValueType
    bit_width: builtins.int
    scale: builtins.float
    offset: builtins.float
    def __init__(self,
        *,
        type: global___Quantizer.QuantizerType.ValueType = ...,
        bit_width: builtins.int = ...,
        scale: builtins.float = ...,
        offset: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bit_width",b"bit_width","offset",b"offset","scale",b"scale","type",b"type"]) -> None: ...
global___Quantizer = Quantizer
