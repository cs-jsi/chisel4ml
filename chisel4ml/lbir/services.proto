/*
 * Copyright 2022 Computer Systems Department, Jozef Stefan Insitute
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
import "lbir.proto";

package services;

option java_multiple_files = true;
option java_package = "services";

service Chisel4mlService {
  rpc GenerateCircuit (GenerateCircuitParams) returns (GenerateCircuitReturn) {}
  rpc RunSimulation (RunSimulationParams) returns (RunSimulationReturn) {}
}

message GenerateCircuitParams {
    message Options {
        bool isSimple = 1;
    }
    lbir.Model model = 1;
    Options options = 2;
    bool useVerilator = 3;
    bool genVcd = 4;
    uint32 generationTimeoutSec = 5;
}

message GenerateCircuitReturn {
    message ErrorMsg {
        enum ErrorId {
            SUCCESS = 0;
            FAIL    = 1;
        }
        ErrorId errId = 1;
        string msg = 2;
    }
    uint32 circuitId = 1;
    ErrorMsg err = 2;
}

message RunSimulationParams {
    uint32 circuitId = 1;
    repeated lbir.QTensor inputs = 2;
}

message RunSimulationReturn {
    repeated lbir.QTensor values = 1;
}
