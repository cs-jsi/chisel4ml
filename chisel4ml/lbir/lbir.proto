/*
 * Copyright 2022 Computer Systems Department, Jozef Stefan Insitute
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package lbir;

option java_multiple_files = true;
option java_package = "lbir";

message Model {
    string name = 1;
    repeated Layer layers = 2;
}

message Layer {
    enum Type {
        DENSE  = 0;
        CONV2D = 1;
    }
    enum Activation {
        BINARY_SIGN = 0;
        RELU = 1; 
        NO_ACTIVATION = 2;
    }

    Type ltype = 1; // type is a python keyword
    QTensor biases  = 2;
    QTensor weights = 3;
    QTensor input = 4;  // no values, just shape / dtype
    QTensor output = 5; 
    Activation activation = 6;
}

message QTensor {
    Datatype dtype = 1;
    repeated uint32 shape = 2;
    repeated float values = 3; 
}

message Datatype {
    enum QuantizationType {
        UNIFORM = 0;
        BINARY = 1;
    }
    QuantizationType quantization = 1;
    bool signed = 2;
    uint32 bitwidth = 3;
    /*
       In convolutional layers repeated shift(scale) factors signifies a per-channel quantization. In dense layers it 
       is per neuron.
    */
    repeated sint32 shift = 4;
    repeated sint32 offset = 5;
}
